// /api/suggest.js
// Suggestion API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Click & Go
// ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á TH/EN, ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ cityId, label/subtitle
// ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô backend ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö autocomplete

const CITIES = [
  { id: 'BKK',    en: 'Bangkok',         th: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û',          country: 'Thailand' },
  { id: 'CNX',    en: 'Chiang Mai',      th: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',         country: 'Thailand' },
  { id: 'PATTAYA',en: 'Pattaya',         th: '‡∏û‡∏±‡∏ó‡∏¢‡∏≤',            country: 'Thailand' },
  { id: 'HKT',    en: 'Phuket',          th: '‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï',            country: 'Thailand' },
  { id: 'KBV',    en: 'Krabi',           th: '‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà',            country: 'Thailand' },
  { id: 'HHQ',    en: 'Hua Hin',         th: '‡∏´‡∏±‡∏ß‡∏´‡∏¥‡∏ô',            country: 'Thailand' },
  { id: 'USM',    en: 'Koh Samui',       th: '‡πÄ‡∏Å‡∏≤‡∏∞‡∏™‡∏°‡∏∏‡∏¢',          country: 'Thailand' },
  { id: 'CEI',    en: 'Chiang Rai',      th: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢',          country: 'Thailand' },
  { id: 'RYG',    en: 'Rayong',          th: '‡∏£‡∏∞‡∏¢‡∏≠‡∏á',             country: 'Thailand' },
  { id: 'TRAT',   en: 'Koh Chang (Trat)',th: '‡πÄ‡∏Å‡∏≤‡∏∞‡∏ä‡πâ‡∏≤‡∏á (‡∏ï‡∏£‡∏≤‡∏î)',   country: 'Thailand' },
  { id: 'AYU',    en: 'Ayutthaya',       th: '‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',            country: 'Thailand' },
  { id: 'KBI',    en: 'Kanchanaburi',    th: '‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ',         country: 'Thailand' },
  // üëá ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô
  // { id: 'DMK', en: 'Don Mueang', th: '‡∏î‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á', country: 'Thailand' },
];

export default function handler(req, res) {
  try {
    const q = String(req.query.q || '').trim().toLowerCase();
    const lang = String(req.query.lang || 'th-th').toLowerCase();

    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ q
    if (!q) {
      return res.status(200).json({ ok: true, items: [] });
    }

    const matched = CITIES.filter(c => {
      const en = c.en.toLowerCase();
      const th = c.th.toLowerCase();
      return en.includes(q) || th.includes(q);
    }).slice(0, 8);

    const items = matched.map(c => {
      const label = lang.startsWith('th') ? c.th : c.en;
      return {
        id: c.id,        // cityId (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏¥‡∏á Agoda)
        label,           // ‡πÉ‡∏ä‡πâ‡πÇ‡∏ä‡∏ß‡πå‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
        subtitle: c.country,
        city: label,     // ‡πÉ‡∏´‡πâ‡∏ù‡∏±‡πà‡∏á deals/search ‡πÉ‡∏ä‡πâ‡πÇ‡∏ä‡∏ß‡πå
        country: c.country,
        en: c.en,
        th: c.th
      };
    });

    res.setHeader('Cache-Control', 'no-store');
    return res.status(200).json({ ok: true, items });
  } catch (e) {
    console.error('suggest.js error', e);
    return res.status(500).json({ ok: false, error: 'internal_error' });
  }
}
